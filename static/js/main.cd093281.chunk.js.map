{"version":3,"sources":["img/weatherApp.jpeg","img/newsSite.jpeg","img/popUp.jpeg","img/giveAway.jpeg","img/profile.jpeg","img/customAnimations.jpeg","img/renovation.jpeg","img/self.jpeg","img/bars.jpeg","img/book3D.jpeg","img/multi-page-website.JPG","img/todoApp2.JPG","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","state","allProjects","link","img","todoApp2","heading","description","techStack","weatherApp","multiPageWebsite","newsSite","pleaseNote","popUp","giveAway","profile","customAnimations","renovation","self","bars","book3D","active","setTimeout","setState","className","this","map","project","index","href","key","src","alt","join","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd093281.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weatherApp.a8615aa5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/newsSite.1f47ae77.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/popUp.98d203ce.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/giveAway.18dc4426.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/profile.70b61715.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/customAnimations.337f481c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/renovation.bfd673f4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/self.1fa5239e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/bars.8bd0426f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/book3D.17a51ab7.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/multi-page-website.427c424e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/todoApp2.66b9357d.JPG\";","import React, {Component} from 'react'\nimport {gsap} from 'gsap'\n\nimport weatherApp from './img/weatherApp.jpeg'\nimport newsSite from './img/newsSite.jpeg'\nimport popUp from './img/popUp.jpeg'\nimport giveAway from './img/giveAway.jpeg'\nimport profile from './img/profile.jpeg'\nimport customAnimations from './img/customAnimations.jpeg'\nimport renovation from './img/renovation.jpeg'\nimport self from './img/self.jpeg'\nimport bars from './img/bars.jpeg'\nimport book3D from './img/book3D.jpeg'\nimport multiPageWebsite from './img/multi-page-website.JPG'\nimport todoApp2 from './img/todoApp2.JPG'\n\nimport './App.css'\n\n\nclass App extends Component {\n  state = {\n    allProjects: [\n      {\n        link: 'https://sandipsaha597.github.io/todo-app-reactjs/',\n        img: [todoApp2, 'Todo app'],\n        heading: 'Todo app(CRUD)',\n        description: \"This app don't have any backend or database. It's a todo app with CRUD functionality. To manage state it uses hooks and context API.\",\n        techStack: ['ReactJS']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/weather-app/',\n        img: [weatherApp, 'Weather app'],\n        heading: 'Weather app',\n        description: 'Current weather temparature in celcius and 7 days forecast of average temparature. It is using apexcharts to show weather forecast in an interactive chart.',\n        techStack: ['ReactJS']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/multi-page-website',\n        img: [multiPageWebsite, 'Multi page website'],\n        heading: 'Multi page website',\n        description: 'This is a pretty simple multi page website. It is using react router, hooks and gsap animations. On homepage it has a typewritting effect.',\n        techStack: ['ReactJS(hooks)']\n      },\n      {\n        link: 'https://safe-plains-83280.herokuapp.com/',\n        img: [newsSite, 'Dynamic news website'],\n        heading: 'NEWS site',\n        pleaseNote: 'I can build little to nothing using nodeJS, expressJS, mongoDB without copy pasting',\n        description: 'This site have an admin page where anyone can post anything. That will be saved in mongoDB altas database. Homepage is fetching news from that database.',\n        techStack: ['ReactJS', 'nodeJS', 'expressJS', 'mongoDB']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/sign-up-pop-up/',\n        img: [popUp, 'Sign up pop up animation'],\n        heading: 'Sign up pop up with custom animations',\n        description: 'I designed and built this for an online contest and also won the prize.',\n        techStack: ['HTML', 'CSS', 'JavaScript']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/giveaway-contest/',\n        img: [giveAway, 'Giveaway contest'],\n        heading: 'Giveaway',\n        description: 'I designed and built this for an online contest and also won the prize. It is easily changeable with other images and themes',\n        techStack: ['HTML', 'CSS', 'JavaScript']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/profile/',\n        img: [profile, 'Portfolio'],\n        heading: 'Portfolio',\n        description: 'This is a single page portfolio site with smooth scroll and google map.',\n        techStack: ['HTML', 'CSS(SCSS)', 'JavaScript', 'jQuery']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/custom-animations/',\n        img: [customAnimations, 'Custom animation'],\n        heading: 'Animations, parallax',\n        description: 'Custom slider, parallax, dropdown etc',\n        techStack: ['HTML', 'CSS(SCSS)', 'JavaScript', 'jQuery']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/renovation-company/',\n        img: [renovation, 'renovation'],\n        heading: 'Renovation company',\n        description: 'Using jQuery plugin \"slick carousel\".',\n        techStack: ['HTML', 'CSS', 'JavaScript', 'jQuery']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/self/',\n        img: [self, 'fitness blog'],\n        heading: 'Fitness blog',\n        techStack: ['HTML', 'CSS', 'JavaScript', 'jQuery']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/animated-bars/',\n        img: [bars, 'Animated bars'],\n        heading: '5 Animated bars',\n        description: 'They change from bars to cross and vice-versa when clicked.',\n        techStack: ['HTML', 'CSS', 'JavaScript']\n      },\n      {\n        link: 'https://sandipsaha597.github.io/book3D/',\n        img: [book3D, '3D book flip'],\n        heading: '3D book flip',\n        description: 'Single page book flip -135deg with 3D effect.',\n        techStack: ['HTML', 'CSS']\n      },\n    ],\n\n    active: false\n  }\n  componentDidMount() {\n    setTimeout(() => { this.setState({active: true}) }, 1)\n  }\n  // componentDidMount() {\n  //   gsap.from('.project', {\n  //     opacity: 0,\n  //     duration: .8,\n  //     stagger: .1,\n  //     // scale: .1,\n  //     // ease: 'power3.out',\n  //     y: 50\n  //   })\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className='container'>\n          <h1>My portfolio</h1>\n          <div className={`projects ${this.state.active ? 'active' : ''}`}>\n          {this.state.allProjects.map((project, index) => {\n            return(\n              <a href={project.link} className='project' key={index}>\n                <img src={project.img[0]} alt={project.img[1]} />\n                <div className='overlay'>\n                  <h2>{project.heading}</h2>\n                  {(project.pleaseNote) ? <p><b>Please note: </b>{project.pleaseNote}</p> : null}\n                  <p className='description'>{project.description}</p>\n                  <p><b>Tech stack: </b>{project.techStack.join(', ')}</p>\n                </div>\n              </a>\n            )\n          })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}